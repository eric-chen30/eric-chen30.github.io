<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>CsStar • Posts by &#34;数据分析&#34; category</title>
    <link href="http://example.com" />
    <updated>2020-09-13T08:25:21.000Z</updated>
    <category term="Docker" />
    <category term="Pandas" />
    <entry>
        <id>http://example.com/2020/09/13/%E8%AE%A4%E8%AF%86Pandas-DataFrame/</id>
        <title>认识Pandas-DataFrame</title>
        <link rel="alternate" href="http://example.com/2020/09/13/%E8%AE%A4%E8%AF%86Pandas-DataFrame/"/>
        <content type="html">&lt;h1 id=&#34;pandas-dataframe基础知识总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pandas-dataframe基础知识总结&#34;&gt;#&lt;/a&gt; Pandas-DataFrame 基础知识总结&lt;/h1&gt;
&lt;h2 id=&#34;dataframe的创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dataframe的创建&#34;&gt;#&lt;/a&gt; DataFrame 的创建&lt;/h2&gt;
&lt;h3 id=&#34;dataframe和series简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dataframe和series简介&#34;&gt;#&lt;/a&gt; DataFrame 和 Series 简介&lt;/h3&gt;
&lt;p&gt;DataFrame 是一种表格型的数据结构。DataFrame 既有行索引，也有列索引，它可以看作是由 Series 组成的字典，并且这些 Series 共用一个索引。创建方式有很多种，主要是根据 dict 进行创建，或者是读取 csv 或者 txt 文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Series&lt;/strong&gt;：简单来说，就是一个竖着的 List，一般创建需要传入一个 List。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = pd.Series([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,np.nan])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(s)      &lt;span class=&#34;comment&#34;&gt;# 竖着的列表，其中np.nan为NaN，还包含默认的索引列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;numpy 中不存在的值都会被赋值为 NaN&lt;/li&gt;
&lt;li&gt;默认索引列为数字（从 0 开始），也可以自定义索引列，在 Series 函数中添加 index 关键字，同时给一个自定义索引列表&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;根据字典创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#根据字典创建&#34;&gt;#&lt;/a&gt; 根据字典创建&lt;/h3&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;:[&lt;span class=&#34;string&#34;&gt;&amp;#x27;csstar&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;jackson&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;tom&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;jerry&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;yummy&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;year&amp;#x27;&lt;/span&gt;:[&lt;span class=&#34;number&#34;&gt;2000&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2001&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2008&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2010&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2020&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;sex&amp;#x27;&lt;/span&gt;:[&lt;span class=&#34;string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;w&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;w&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 得到了DataFrame对象，包含默认索引列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(data)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# index是行索引--&amp;gt;对应行  columns是列索引--&amp;gt;对应列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame2 = pd.DataFrame(data,index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;one&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;four&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;five&amp;#x27;&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;sex&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;year&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果 columns 中出现了没有定义的列，那么该列的数据都为 NaN&lt;/li&gt;
&lt;li&gt;可以用 index，columns，values 来访问 DataFrame 的行索引，列索引以及数据值，数据返回的是一个&lt;strong&gt;二维数组&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;读取文件的方式创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#读取文件的方式创建&#34;&gt;#&lt;/a&gt; 读取文件的方式创建&lt;/h3&gt;
&lt;p&gt;读取文件生成 DataFrame 最常用的是&lt;strong&gt; read_csv,read_table&lt;/strong&gt; 方法&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E8%AE%A4%E8%AF%86Pandas-DataFrame.assets/image-20200913170309272.png&#34; alt=&#34;image-20200913170309272&#34;&gt;&lt;/p&gt;
&lt;p&gt;还有一些其他的 DataFrame 创建方式，比如说可以通过读取 mysql 或者 mongoDB，读取 json 文件等方式来生成 DataFrame 对象。&lt;/p&gt;
&lt;h2 id=&#34;dataframe轴的概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dataframe轴的概念&#34;&gt;#&lt;/a&gt; DataFrame 轴的概念&lt;/h2&gt;
&lt;p&gt;在 DataFrame 的处理中经常会遇到轴的概念，我们所说的 axis=0 即表示沿着每一列或者行标签 / 索引值向下执行的，axis = 1 即表示沿着每一行或者列标签方向执行对应的方法&lt;/p&gt;
&lt;h2 id=&#34;dataframe的性质&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dataframe的性质&#34;&gt;#&lt;/a&gt; DataFrame 的性质&lt;/h2&gt;
&lt;h3 id=&#34;索引-切片&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#索引-切片&#34;&gt;#&lt;/a&gt; 索引、切片&lt;/h3&gt;
&lt;p&gt;根据列的名字获取一列，返回的是一个 Series&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame[&lt;span class=&#34;string&#34;&gt;&amp;#x27;列索引的名字&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取多列或者多行&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)),index = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Colorado&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Utah&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;New York&amp;#x27;&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;one&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;four&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data[[&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    two three&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah    &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;New York    &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#取行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data[:&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    one two three   four&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据逻辑条件来选取&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data[data[&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;]&amp;gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    one two three   four&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah    &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;New York    &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;专门用于索引的方法，如果用标签 —&amp;gt;loc 方法，如果用下标 —&amp;gt;iloc 方法&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#data.ix[&amp;#x27;Colorado&amp;#x27;,[&amp;#x27;two&amp;#x27;,&amp;#x27;three&amp;#x27;]]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.loc[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Colorado&amp;#x27;&lt;/span&gt;,[&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;two      &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;three    &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Name: Colorado, dtype: int64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.iloc[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio         &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado     &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah        &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Name: three, dtype: int64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;修改数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改数据&#34;&gt;#&lt;/a&gt; 修改数据&lt;/h3&gt;
&lt;p&gt;使用标量修改某一列&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame[&lt;span class=&#34;string&#34;&gt;&amp;#x27;debt&amp;#x27;&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;16.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame &lt;span class=&#34;comment&#34;&gt;# debt列全部数据为16.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用一个列表来修改，不过要保证列表的长度与 DataFrame 长度相同：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame.debt = np.arange(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用一个 Series，此时会根据索引来进行精确匹配&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;val=pd.Series([&lt;span class=&#34;number&#34;&gt;-1.2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-1.5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-1.7&lt;/span&gt;],index[&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;four&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;five&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame[&lt;span class=&#34;string&#34;&gt;&amp;#x27;debt&amp;#x27;&lt;/span&gt;] = val  &lt;span class=&#34;comment&#34;&gt;#定义一个三个数据的Series来代替指定index行的值，从而实现精确定位并修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;重新索引&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重新索引&#34;&gt;#&lt;/a&gt; 重新索引&lt;/h3&gt;
&lt;p&gt;使用 reinex 方法对 DataFrame 进行重新索引，可以重新索引行或 i 列，或者两者都索引，只穿一个参数的情况下，会重新索引行。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)),index=[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;California&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame2 = frame.reindex([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Ohio    Texas   California&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;states = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Utah&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;California&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.reindex(columns=states)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Texas   Utah    California&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;丢弃指定轴上的值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#丢弃指定轴上的值&#34;&gt;#&lt;/a&gt; 丢弃指定轴上的值&lt;/h3&gt;
&lt;p&gt;使用 drop 方法丢弃指定轴上的值，不会对 DataFrame 造成影响&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)),index = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;],columns = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;California&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.drop(&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    Texas   California&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a   &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.drop([&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;],axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Texas   California&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c   &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;算术运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#算术运算&#34;&gt;#&lt;/a&gt; 算术运算&lt;/h3&gt;
&lt;p&gt;DataFrame 在进行算数运算时会进行补齐，在不重叠的部分补足 NA：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;df1 = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)),columns=list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bcd&amp;#x27;&lt;/span&gt;),index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Colorado&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df2 = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)),columns = list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bde&amp;#x27;&lt;/span&gt;),index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Utah&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Oregon&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df1 + df2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b   c   d   e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    NaN NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt; NaN &lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oregon  NaN NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas   &lt;span class=&#34;number&#34;&gt;9.0&lt;/span&gt; NaN &lt;span class=&#34;number&#34;&gt;12.0&lt;/span&gt;    NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah    NaN NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以使用 fill_value 方法填充 NA 数据，不过两个 df 都为 NA 的数据，该方法不会填充：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;df1.add(df2,fill_value=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b   c   d   e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8.0&lt;/span&gt; NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oregon  &lt;span class=&#34;number&#34;&gt;9.0&lt;/span&gt; NaN &lt;span class=&#34;number&#34;&gt;10.0&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;11.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas   &lt;span class=&#34;number&#34;&gt;9.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;12.0&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;8.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah    &lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt; NaN &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;函数应用与映射&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数应用与映射&#34;&gt;#&lt;/a&gt; 函数应用与映射&lt;/h3&gt;
&lt;p&gt;numpy 的元素级数组方法，也可以用于操作 Pandas 对象：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(np.random.randn(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;),columns=list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bcd&amp;#x27;&lt;/span&gt;),index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Colorado&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;np.abs(frame)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b   c   d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;0.367521&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.232387&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.649330&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas   &lt;span class=&#34;number&#34;&gt;3.115632&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;1.415106&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.093794&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;0.714983&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;1.420871&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.557722&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一个常见的操作是，将函数应用到各列或行所形成的一维数组上。DataFrame 的 apply 方法即可实现此功能。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;f = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; x:x.max() - x.min()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.apply(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b    &lt;span class=&#34;number&#34;&gt;3.830616&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c    &lt;span class=&#34;number&#34;&gt;2.835978&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d    &lt;span class=&#34;number&#34;&gt;2.743124&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.apply(f,axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio        &lt;span class=&#34;number&#34;&gt;1.016851&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas       &lt;span class=&#34;number&#34;&gt;4.530739&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;2.135855&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;f&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; pd.Series([x.min(),x.max()],index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;min&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;max&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.apply(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b   c   d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;min &lt;span class=&#34;number&#34;&gt;-0.714983&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;-1.415106&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;-0.649330&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;max &lt;span class=&#34;number&#34;&gt;3.115632&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;1.420871&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.093794&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;元素级的 Python 函数也是可以用的，使用 applymap 方法：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;format = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; x:&lt;span class=&#34;string&#34;&gt;&amp;#x27;%.2f&amp;#x27;&lt;/span&gt;%x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.applymap(format)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b   c   d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;0.37&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-0.23&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;-0.65&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas   &lt;span class=&#34;number&#34;&gt;3.12&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-1.42&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2.09&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;-0.71&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.42&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-0.56&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;排序与排名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#排序与排名&#34;&gt;#&lt;/a&gt; 排序与排名&lt;/h3&gt;
&lt;p&gt;对于 DataFrame，sort_index 可以根据任意轴的排序，并指定升序降序&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)),index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;one&amp;#x27;&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.sort_index()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d   a   b   c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;three   &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.sort_index(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,ascending=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d   a   b   c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;three   &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DataFrame 也可以按照值进行排序：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#按照任意一列或多列进行排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.sort_values(by=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d   a   b   c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;three   &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;汇总和计算描述统计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#汇总和计算描述统计&#34;&gt;#&lt;/a&gt; 汇总和计算描述统计&lt;/h3&gt;
&lt;p&gt;DataFrame 中实现了 sum、mean、max 等方法，我们可以指定进行汇总统计的轴，同时，也可以使用 describe 函数查看基本所有的统计项：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;df = pd.DataFrame([[&lt;span class=&#34;number&#34;&gt;1.4&lt;/span&gt;,np.nan],[&lt;span class=&#34;number&#34;&gt;7.1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-4.5&lt;/span&gt;],[np.nan,np.nan],[&lt;span class=&#34;number&#34;&gt;0.75&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-1.3&lt;/span&gt;]],index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;one&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.sum(axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one    &lt;span class=&#34;number&#34;&gt;9.25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;two   &lt;span class=&#34;number&#34;&gt;-5.80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#Na会被自动排除，可以使用skipna选项来禁用该功能&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.mean(axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,skipna=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a      NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b    &lt;span class=&#34;number&#34;&gt;1.300&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c      NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d   &lt;span class=&#34;number&#34;&gt;-0.275&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#idxmax返回间接统计，是达到最大值的索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.idxmax()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one    b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;two    d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: object&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#describe返回的是DataFrame的汇总统计&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#非数值型的与数值型的统计返回结果不同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.describe()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one two&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count   &lt;span class=&#34;number&#34;&gt;3.000000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mean    &lt;span class=&#34;number&#34;&gt;3.083333&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-2.900000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;std &lt;span class=&#34;number&#34;&gt;3.493685&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.262742&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;min &lt;span class=&#34;number&#34;&gt;0.750000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-4.500000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;% &lt;span class=&#34;number&#34;&gt;1.075000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-3.700000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;% &lt;span class=&#34;number&#34;&gt;1.400000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-2.900000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;75&lt;/span&gt;% &lt;span class=&#34;number&#34;&gt;4.250000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-2.100000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;max &lt;span class=&#34;number&#34;&gt;7.100000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-1.300000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DataFrame 也实现了 corr 和 cov 方法来计算一个 DataFrame 的相关系数矩阵和协方差矩阵，同时 DataFrame 也可以与 Series 求解相关的系数。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame1 = pd.DataFrame(np.random.randn(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;),index=list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;),columns=list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame1.corr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;bound method DataFrame.corr of           a         b         c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a  &lt;span class=&#34;number&#34;&gt;1.253773&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0.429059&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;1.535575&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b &lt;span class=&#34;number&#34;&gt;-0.113987&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-2.837396&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-0.894469&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c &lt;span class=&#34;number&#34;&gt;-0.548208&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0.834003&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0.994863&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame1.cov()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a   b   c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a   &lt;span class=&#34;number&#34;&gt;0.884409&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.357304&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.579613&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b   &lt;span class=&#34;number&#34;&gt;0.357304&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;4.052147&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.442527&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c   &lt;span class=&#34;number&#34;&gt;0.579613&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.442527&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;1.627843&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#corrwith用于计算每一列与Series的相关系数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame1.corrwith(frame1[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a    &lt;span class=&#34;number&#34;&gt;1.000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b    &lt;span class=&#34;number&#34;&gt;0.188742&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c    &lt;span class=&#34;number&#34;&gt;0.483065&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;处理缺失数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#处理缺失数据&#34;&gt;#&lt;/a&gt; 处理缺失数据&lt;/h3&gt;
&lt;p&gt;Pandas 中缺失值相关的方法主要有以下三个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;isnull 方法用于判断数据是否为空数据&lt;/li&gt;
&lt;li&gt;fillna 方法用于填补缺失数据&lt;/li&gt;
&lt;li&gt;dropna 方法用于舍弃缺失数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面两个方法返回一个新的 Series 或者 DataFrame，对原数据没有影响，如果想在原数据上进行直接修改，使用 inplace 参数：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data = pd.DataFrame([[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;],[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,np.nan,np.nan],[np.nan,np.nan,np.nan],[np.nan,&lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.dropna()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对 DataFrame 来说，dropna 方法如果发现缺失值，就会进行整个数据行的删除，不过可以指定删除的方式，how=all，是当整个全是 na 的时候才可以进行删除，同时还可以指定删除的轴。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data.dropna(how=&lt;span class=&#34;string&#34;&gt;&amp;#x27;all&amp;#x27;&lt;/span&gt;,axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,inplace=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DataFrame 填充缺失值可以统一填充，也可以按列填充，或者指定一种填充方式：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data.fillna(&amp;#123;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.fillna(method=&lt;span class=&#34;string&#34;&gt;&amp;#x27;ffill&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="Pandas" />
        <updated>2020-09-13T08:25:21.000Z</updated>
    </entry>
</feed>
