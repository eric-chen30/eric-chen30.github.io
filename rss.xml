<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>CsStar</title>
        <link>http://example.com</link>
        <description>Work Hard To Be A Better Man</description>
        <language>zh-CN</language>
        <pubDate>Tue, 15 Sep 2020 14:02:26 +0800</pubDate>
        <lastBuildDate>Tue, 15 Sep 2020 14:02:26 +0800</lastBuildDate>
        <category>Docker</category>
        <category>机器学习</category>
        <category>Pandas</category>
        <item>
            <guid isPermalink="true">http://example.com/2020/09/15/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E5%90%8E%E4%B9%A0%E9%A2%98/</guid>
            <title>机器学习课后习题</title>
            <link>http://example.com/2020/09/15/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%AF%BE%E5%90%8E%E4%B9%A0%E9%A2%98/</link>
            <category>机器学习</category>
            <pubDate>Tue, 15 Sep 2020 14:02:26 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;假设空间与版本空间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#假设空间与版本空间&#34;&gt;#&lt;/a&gt; 假设空间与版本空间&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;假设空间：所有可能取到的值组成的样本。&lt;/p&gt;
&lt;p&gt;版本空间：与给定正样本一致和与负样本不一致的假设子集集合。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;计算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计算&#34;&gt;#&lt;/a&gt; 计算&lt;/h2&gt;
&lt;p&gt;假设西瓜由青绿、乌黑、浅白三种颜色，同理，根蒂和敲声也由三种属性完全定义。求假设空间：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;假设空间大小：&lt;/p&gt;
&lt;p&gt;（3+1）✖（3+1）✖（3+1）+1 = 65&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;（3+1）：就拿颜色来说，可能任意一种颜色都可以，其他属性也是一样。&lt;/p&gt;
&lt;p&gt;（+1）：世界上没有好瓜&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;版本空间：根据给定的样本，从假设空间中&lt;strong&gt;剔除&lt;/strong&gt;与正样本不一致，与负样本一致的假设。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;模型评估与选择&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模型评估与选择&#34;&gt;#&lt;/a&gt; 模型评估与选择&lt;/h1&gt;
&lt;h2 id=&#34;过拟合与欠拟合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过拟合与欠拟合&#34;&gt;#&lt;/a&gt; 过拟合与欠拟合&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;过拟合：对训练样本的特征训练的太好了，导致泛化能力下降，对新样本的预测很差的现象。&lt;/li&gt;
&lt;li&gt;欠拟合：训练样本的特征不够，泛化能力太高了。比如模型可能训练出绿色是叶子的结论，那么对于一棵树，模型也将树判断为叶子。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;评估方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#评估方法&#34;&gt;#&lt;/a&gt; 评估方法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;通常用测试误差来近似模型的泛化误差。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;留出法hold-out&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#留出法hold-out&#34;&gt;#&lt;/a&gt; 留出法（hold out）&lt;/h3&gt;
&lt;p&gt;留出法直接将数据集划分为两个互斥的部分，其中一部分用来做训练集，另一部分用来做测试集。通常训练集与测试集的比例为 7：3。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;尽可能保持数据分布的一致性。通常采用 “分层采样” 的方法。&lt;/li&gt;
&lt;li&gt;采用若干次随机划分避免单次流出法的不稳定。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;交叉验证法cross-validation&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#交叉验证法cross-validation&#34;&gt;#&lt;/a&gt; 交叉验证法（cross validation)&lt;/h3&gt;
&lt;p&gt;交叉验证法先将数据集划分为 k 个大小相似的互斥子集，每次采用 k-1 个子集作为训练集，剩下的一个子集作为测试集。进行 k 次训练和测试，最终返回 k 个测试结果的均值。又称为 “k 折交叉验证”&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通常重复 p 次不同的划分，最终结果是 p 次 k 折交叉验证结果的均值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;留一法leave-one-outloo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#留一法leave-one-outloo&#34;&gt;#&lt;/a&gt; 留一法（leave-one-out，LOO）&lt;/h3&gt;
&lt;p&gt;留一法是交叉验证法的一种特殊情况，k = 样本数，即将样本分成一份一个样本，每次测试集只有一个样本。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该方法的确定，计算的开销比较大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;自助法bootstrapping&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自助法bootstrapping&#34;&gt;#&lt;/a&gt; 自助法（bootstrapping）&lt;/h3&gt;
&lt;p&gt;自助法以自助采样为基础（有放回采样）。每次随机从数据集中挑选一个样本，放入另一个数据集合，然后将样本放回原数据中，重复操作 m 次，因此得到了一个含 m 个样本的数据集。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;样本在 m 次采样中始终不被采到的概率（1-1\m）的 m 次方，当 m 足够大时，上述式子的极限约为 0.368。说明有 0.368 的样本不会出现在新的数据集中，新数据集中含有更多的数据，我们可以用来当作训练集，剩下的做测试集。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;优点：在数据集较小、难以有效划分训练和测试集的时候很有用。&lt;/li&gt;
&lt;li&gt;改变了初始数据集的分布，会引入估计偏差。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2020/09/13/%E8%AE%A4%E8%AF%86Pandas-DataFrame/</guid>
            <title>认识Pandas-DataFrame</title>
            <link>http://example.com/2020/09/13/%E8%AE%A4%E8%AF%86Pandas-DataFrame/</link>
            <category>Pandas</category>
            <pubDate>Sun, 13 Sep 2020 16:25:21 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;dataframe的创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dataframe的创建&#34;&gt;#&lt;/a&gt; DataFrame 的创建&lt;/h1&gt;
&lt;h2 id=&#34;dataframe和series简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dataframe和series简介&#34;&gt;#&lt;/a&gt; DataFrame 和 Series 简介&lt;/h2&gt;
&lt;p&gt;DataFrame 是一种表格型的数据结构。DataFrame 既有行索引，也有列索引，它可以看作是由 Series 组成的字典，并且这些 Series 共用一个索引。创建方式有很多种，主要是根据 dict 进行创建，或者是读取 csv 或者 txt 文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Series&lt;/strong&gt;：简单来说，就是一个竖着的 List，一般创建需要传入一个 List。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pandas &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = pd.Series([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,np.nan])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(s)      &lt;span class=&#34;comment&#34;&gt;# 竖着的列表，其中np.nan为NaN，还包含默认的索引列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;numpy 中不存在的值都会被赋值为 NaN&lt;/li&gt;
&lt;li&gt;默认索引列为数字（从 0 开始），也可以自定义索引列，在 Series 函数中添加 index 关键字，同时给一个自定义索引列表&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;根据字典创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#根据字典创建&#34;&gt;#&lt;/a&gt; 根据字典创建&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;:[&lt;span class=&#34;string&#34;&gt;&amp;#x27;csstar&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;jackson&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;tom&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;jerry&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;yummy&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;year&amp;#x27;&lt;/span&gt;:[&lt;span class=&#34;number&#34;&gt;2000&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2001&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2008&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2010&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2020&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;sex&amp;#x27;&lt;/span&gt;:[&lt;span class=&#34;string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;m&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;w&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;w&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 得到了DataFrame对象，包含默认索引列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(data)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# index是行索引--&amp;gt;对应行  columns是列索引--&amp;gt;对应列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame2 = pd.DataFrame(data,index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;one&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;four&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;five&amp;#x27;&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;name&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;sex&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;year&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果 columns 中出现了没有定义的列，那么该列的数据都为 NaN&lt;/li&gt;
&lt;li&gt;可以用 index，columns，values 来访问 DataFrame 的行索引，列索引以及数据值，数据返回的是一个&lt;strong&gt;二维数组&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;读取文件的方式创建&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#读取文件的方式创建&#34;&gt;#&lt;/a&gt; 读取文件的方式创建&lt;/h2&gt;
&lt;p&gt;读取文件生成 DataFrame 最常用的是&lt;strong&gt; read_csv,read_table&lt;/strong&gt; 方法&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E8%AE%A4%E8%AF%86Pandas-DataFrame.assets/image-20200913170309272.png&#34; alt=&#34;image-20200913170309272&#34;&gt;&lt;/p&gt;
&lt;p&gt;还有一些其他的 DataFrame 创建方式，比如说可以通过读取 mysql 或者 mongoDB，读取 json 文件等方式来生成 DataFrame 对象。&lt;/p&gt;
&lt;h1 id=&#34;dataframe轴的概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dataframe轴的概念&#34;&gt;#&lt;/a&gt; DataFrame 轴的概念&lt;/h1&gt;
&lt;p&gt;在 DataFrame 的处理中经常会遇到轴的概念，我们所说的 axis=0 即表示沿着每一列或者行标签 / 索引值向下执行的，axis = 1 即表示沿着每一行或者列标签方向执行对应的方法&lt;/p&gt;
&lt;h1 id=&#34;dataframe的性质&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dataframe的性质&#34;&gt;#&lt;/a&gt; DataFrame 的性质&lt;/h1&gt;
&lt;h2 id=&#34;索引-切片&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#索引-切片&#34;&gt;#&lt;/a&gt; 索引、切片&lt;/h2&gt;
&lt;p&gt;根据列的名字获取一列，返回的是一个 Series&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame[&lt;span class=&#34;string&#34;&gt;&amp;#x27;列索引的名字&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取多列或者多行&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)),index = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Colorado&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Utah&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;New York&amp;#x27;&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;one&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;four&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data[[&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    two three&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah    &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;New York    &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#取行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data[:&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    one two three   four&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据逻辑条件来选取&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data[data[&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;]&amp;gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    one two three   four&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah    &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;New York    &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;专门用于索引的方法，如果用标签 —&amp;gt;loc 方法，如果用下标 —&amp;gt;iloc 方法&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#data.ix[&amp;#x27;Colorado&amp;#x27;,[&amp;#x27;two&amp;#x27;,&amp;#x27;three&amp;#x27;]]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.loc[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Colorado&amp;#x27;&lt;/span&gt;,[&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;two      &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;three    &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Name: Colorado, dtype: int64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.iloc[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio         &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado     &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah        &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Name: three, dtype: int64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;修改数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改数据&#34;&gt;#&lt;/a&gt; 修改数据&lt;/h2&gt;
&lt;p&gt;使用标量修改某一列&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame[&lt;span class=&#34;string&#34;&gt;&amp;#x27;debt&amp;#x27;&lt;/span&gt;]=&lt;span class=&#34;number&#34;&gt;16.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame &lt;span class=&#34;comment&#34;&gt;# debt列全部数据为16.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用一个列表来修改，不过要保证列表的长度与 DataFrame 长度相同：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame.debt = np.arange(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用一个 Series，此时会根据索引来进行精确匹配&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;val=pd.Series([&lt;span class=&#34;number&#34;&gt;-1.2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-1.5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-1.7&lt;/span&gt;],index[&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;four&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;five&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame[&lt;span class=&#34;string&#34;&gt;&amp;#x27;debt&amp;#x27;&lt;/span&gt;] = val  &lt;span class=&#34;comment&#34;&gt;#定义一个三个数据的Series来代替指定index行的值，从而实现精确定位并修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;重新索引&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重新索引&#34;&gt;#&lt;/a&gt; 重新索引&lt;/h2&gt;
&lt;p&gt;使用 reinex 方法对 DataFrame 进行重新索引，可以重新索引行或 i 列，或者两者都索引，只穿一个参数的情况下，会重新索引行。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)),index=[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;California&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame2 = frame.reindex([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Ohio    Texas   California&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;states = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Utah&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;California&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.reindex(columns=states)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Texas   Utah    California&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;丢弃指定轴上的值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#丢弃指定轴上的值&#34;&gt;#&lt;/a&gt; 丢弃指定轴上的值&lt;/h2&gt;
&lt;p&gt;使用 drop 方法丢弃指定轴上的值，不会对 DataFrame 造成影响&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)),index = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;],columns = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;California&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.drop(&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    Texas   California&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a   &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.drop([&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;],axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Texas   California&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c   &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;算术运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#算术运算&#34;&gt;#&lt;/a&gt; 算术运算&lt;/h2&gt;
&lt;p&gt;DataFrame 在进行算数运算时会进行补齐，在不重叠的部分补足 NA：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;df1 = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)),columns=list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bcd&amp;#x27;&lt;/span&gt;),index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Colorado&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df2 = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)),columns = list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bde&amp;#x27;&lt;/span&gt;),index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Utah&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Oregon&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df1 + df2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b   c   d   e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    NaN NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt; NaN &lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oregon  NaN NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas   &lt;span class=&#34;number&#34;&gt;9.0&lt;/span&gt; NaN &lt;span class=&#34;number&#34;&gt;12.0&lt;/span&gt;    NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah    NaN NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以使用 fill_value 方法填充 NA 数据，不过两个 df 都为 NA 的数据，该方法不会填充：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;df1.add(df2,fill_value=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b   c   d   e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8.0&lt;/span&gt; NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Oregon  &lt;span class=&#34;number&#34;&gt;9.0&lt;/span&gt; NaN &lt;span class=&#34;number&#34;&gt;10.0&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;11.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas   &lt;span class=&#34;number&#34;&gt;9.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;12.0&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;8.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Utah    &lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt; NaN &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;函数应用与映射&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数应用与映射&#34;&gt;#&lt;/a&gt; 函数应用与映射&lt;/h2&gt;
&lt;p&gt;numpy 的元素级数组方法，也可以用于操作 Pandas 对象：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(np.random.randn(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;),columns=list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;bcd&amp;#x27;&lt;/span&gt;),index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;Ohio&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Texas&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;Colorado&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;np.abs(frame)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b   c   d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;0.367521&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.232387&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.649330&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas   &lt;span class=&#34;number&#34;&gt;3.115632&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;1.415106&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.093794&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;0.714983&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;1.420871&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.557722&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另一个常见的操作是，将函数应用到各列或行所形成的一维数组上。DataFrame 的 apply 方法即可实现此功能。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;f = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; x:x.max() - x.min()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.apply(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b    &lt;span class=&#34;number&#34;&gt;3.830616&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c    &lt;span class=&#34;number&#34;&gt;2.835978&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d    &lt;span class=&#34;number&#34;&gt;2.743124&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.apply(f,axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio        &lt;span class=&#34;number&#34;&gt;1.016851&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas       &lt;span class=&#34;number&#34;&gt;4.530739&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;2.135855&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;f&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; pd.Series([x.min(),x.max()],index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;min&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;max&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.apply(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b   c   d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;min &lt;span class=&#34;number&#34;&gt;-0.714983&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;-1.415106&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;-0.649330&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;max &lt;span class=&#34;number&#34;&gt;3.115632&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;1.420871&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.093794&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;元素级的 Python 函数也是可以用的，使用 applymap 方法：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;format = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; x:&lt;span class=&#34;string&#34;&gt;&amp;#x27;%.2f&amp;#x27;&lt;/span&gt;%x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.applymap(format)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b   c   d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ohio    &lt;span class=&#34;number&#34;&gt;0.37&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-0.23&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;-0.65&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Texas   &lt;span class=&#34;number&#34;&gt;3.12&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-1.42&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2.09&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Colorado    &lt;span class=&#34;number&#34;&gt;-0.71&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.42&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-0.56&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;排序与排名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#排序与排名&#34;&gt;#&lt;/a&gt; 排序与排名&lt;/h2&gt;
&lt;p&gt;对于 DataFrame，sort_index 可以根据任意轴的排序，并指定升序降序&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame = pd.DataFrame(np.arange(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;).reshape((&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)),index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;three&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;one&amp;#x27;&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.sort_index()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d   a   b   c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;three   &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.sort_index(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,ascending=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d   a   b   c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;three   &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DataFrame 也可以按照值进行排序：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#按照任意一列或多列进行排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame.sort_values(by=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d   a   b   c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;three   &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;汇总和计算描述统计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#汇总和计算描述统计&#34;&gt;#&lt;/a&gt; 汇总和计算描述统计&lt;/h2&gt;
&lt;p&gt;DataFrame 中实现了 sum、mean、max 等方法，我们可以指定进行汇总统计的轴，同时，也可以使用 describe 函数查看基本所有的统计项：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;df = pd.DataFrame([[&lt;span class=&#34;number&#34;&gt;1.4&lt;/span&gt;,np.nan],[&lt;span class=&#34;number&#34;&gt;7.1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-4.5&lt;/span&gt;],[np.nan,np.nan],[&lt;span class=&#34;number&#34;&gt;0.75&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;-1.3&lt;/span&gt;]],index=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;c&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;d&amp;#x27;&lt;/span&gt;],columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;one&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;two&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.sum(axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one    &lt;span class=&#34;number&#34;&gt;9.25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;two   &lt;span class=&#34;number&#34;&gt;-5.80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#Na会被自动排除，可以使用skipna选项来禁用该功能&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.mean(axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,skipna=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a      NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b    &lt;span class=&#34;number&#34;&gt;1.300&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c      NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d   &lt;span class=&#34;number&#34;&gt;-0.275&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#idxmax返回间接统计，是达到最大值的索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.idxmax()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one    b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;two    d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: object&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#describe返回的是DataFrame的汇总统计&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#非数值型的与数值型的统计返回结果不同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df.describe()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;one two&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count   &lt;span class=&#34;number&#34;&gt;3.000000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mean    &lt;span class=&#34;number&#34;&gt;3.083333&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-2.900000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;std &lt;span class=&#34;number&#34;&gt;3.493685&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.262742&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;min &lt;span class=&#34;number&#34;&gt;0.750000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-4.500000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;% &lt;span class=&#34;number&#34;&gt;1.075000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-3.700000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;% &lt;span class=&#34;number&#34;&gt;1.400000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-2.900000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;75&lt;/span&gt;% &lt;span class=&#34;number&#34;&gt;4.250000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-2.100000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;max &lt;span class=&#34;number&#34;&gt;7.100000&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;-1.300000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DataFrame 也实现了 corr 和 cov 方法来计算一个 DataFrame 的相关系数矩阵和协方差矩阵，同时 DataFrame 也可以与 Series 求解相关的系数。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frame1 = pd.DataFrame(np.random.randn(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;),index=list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;),columns=list(&lt;span class=&#34;string&#34;&gt;&amp;#x27;abc&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame1.corr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;bound method DataFrame.corr of           a         b         c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a  &lt;span class=&#34;number&#34;&gt;1.253773&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0.429059&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;1.535575&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b &lt;span class=&#34;number&#34;&gt;-0.113987&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-2.837396&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;-0.894469&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c &lt;span class=&#34;number&#34;&gt;-0.548208&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0.834003&lt;/span&gt;  &lt;span class=&#34;number&#34;&gt;0.994863&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame1.cov()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a   b   c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a   &lt;span class=&#34;number&#34;&gt;0.884409&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.357304&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;0.579613&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b   &lt;span class=&#34;number&#34;&gt;0.357304&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;4.052147&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.442527&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c   &lt;span class=&#34;number&#34;&gt;0.579613&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;2.442527&lt;/span&gt;    &lt;span class=&#34;number&#34;&gt;1.627843&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#corrwith用于计算每一列与Series的相关系数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;frame1.corrwith(frame1[&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a    &lt;span class=&#34;number&#34;&gt;1.000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b    &lt;span class=&#34;number&#34;&gt;0.188742&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c    &lt;span class=&#34;number&#34;&gt;0.483065&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dtype: float64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;处理缺失数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#处理缺失数据&#34;&gt;#&lt;/a&gt; 处理缺失数据&lt;/h2&gt;
&lt;p&gt;Pandas 中缺失值相关的方法主要有以下三个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;isnull 方法用于判断数据是否为空数据&lt;/li&gt;
&lt;li&gt;fillna 方法用于填补缺失数据&lt;/li&gt;
&lt;li&gt;dropna 方法用于舍弃缺失数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面两个方法返回一个新的 Series 或者 DataFrame，对原数据没有影响，如果想在原数据上进行直接修改，使用 inplace 参数：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data = pd.DataFrame([[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;],[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,np.nan,np.nan],[np.nan,np.nan,np.nan],[np.nan,&lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.dropna()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对 DataFrame 来说，dropna 方法如果发现缺失值，就会进行整个数据行的删除，不过可以指定删除的方式，how=all，是当整个全是 na 的时候才可以进行删除，同时还可以指定删除的轴。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data.dropna(how=&lt;span class=&#34;string&#34;&gt;&amp;#x27;all&amp;#x27;&lt;/span&gt;,axis=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,inplace=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   NaN NaN NaN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DataFrame 填充缺失值可以统一填充，也可以按列填充，或者指定一种填充方式：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data.fillna(&amp;#123;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;   NaN &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data.fillna(method=&lt;span class=&#34;string&#34;&gt;&amp;#x27;ffill&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;   &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6.5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;数据转换的一个实例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据转换的一个实例&#34;&gt;#&lt;/a&gt; 数据转换的一个实例&lt;/h1&gt;
&lt;p&gt;通过 tushare 接口返回的数据就是一个 DataFrame 格式的数据，我们通过 pandas 里的 DataFrame 来获取特定的几列来绘制 K 线。最基础的 K 线需要的数据格式是横轴一般为时间组成的列表，纵轴为以列表为对象的列表，格式为 [[],[],[]…[] ]。主要是通过 tolist () 函数来将 DataFrame 对象或者 Series 转换成列表格式，从而符合绘制曲线的数据格式要求。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tushare &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; ts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pandas &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; DataFrame&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pyecharts.charts &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Kline&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pyecharts &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; options &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; opts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 通过get_hist_data()函数直接获取到大盘参数---暂时认为接口返回的数据是json格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = ts.get_hist_data(&lt;span class=&#34;string&#34;&gt;&amp;#x27;600519&amp;#x27;&lt;/span&gt;,start=&lt;span class=&#34;string&#34;&gt;&amp;#x27;2020-09-01&amp;#x27;&lt;/span&gt;,ktype=&lt;span class=&#34;string&#34;&gt;&amp;#x27;D&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data2 = data.sort_index(ascending=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)     &lt;span class=&#34;comment&#34;&gt;#升序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(data2)        &lt;span class=&#34;comment&#34;&gt;# 打印返回数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# df.open 和df[&amp;#x27;open&amp;#x27;]返回值是一样的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;df = DataFrame(data2,columns=[&lt;span class=&#34;string&#34;&gt;&amp;#x27;open&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;high&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;close&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;low&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(df)               &lt;span class=&#34;comment&#34;&gt;# 从data2大的表结构数据中抽出columns中的这几列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将数据转换成列表-----&amp;gt;K线所需要的数据类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dfList = df.values.tolist()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(dfList)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 选中指定列df[&amp;#x27;列的名字&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(df[&lt;span class=&#34;string&#34;&gt;&amp;#x27;open&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取行索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(df.index)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Index([&amp;#x27;2020-09-01&amp;#x27;, &amp;#x27;2020-09-02&amp;#x27;, &amp;#x27;2020-09-03&amp;#x27;, &amp;#x27;2020-09-04&amp;#x27;, &amp;#x27;2020-09-07&amp;#x27;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#        &amp;#x27;2020-09-08&amp;#x27;, &amp;#x27;2020-09-09&amp;#x27;, &amp;#x27;2020-09-10&amp;#x27;, &amp;#x27;2020-09-11&amp;#x27;],&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#       dtype=&amp;#x27;object&amp;#x27;, name=&amp;#x27;date&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将索引---&amp;gt;此处为date转换成列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;date = df.index.tolist()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(df.index.tolist())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# [&amp;#x27;2020-09-01&amp;#x27;, &amp;#x27;2020-09-02&amp;#x27;, &amp;#x27;2020-09-03&amp;#x27;, &amp;#x27;2020-09-04&amp;#x27;, &amp;#x27;2020-09-07&amp;#x27;, &amp;#x27;2020-09-08&amp;#x27;, &amp;#x27;2020-09-09&amp;#x27;, &amp;#x27;2020-09-10&amp;#x27;, &amp;#x27;2020-09-11&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取列索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(df.columns)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Index([&amp;#x27;open&amp;#x27;, &amp;#x27;high&amp;#x27;, &amp;#x27;close&amp;#x27;, &amp;#x27;low&amp;#x27;], dtype=&amp;#x27;object&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 通过行索引索取指定的行数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(df.loc[&lt;span class=&#34;string&#34;&gt;&amp;#x27;2020-09-01&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将series列数据转换为列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(df.loc[&lt;span class=&#34;string&#34;&gt;&amp;#x27;2020-09-01&amp;#x27;&lt;/span&gt;].tolist())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# open     1792.00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# high     1802.00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# close    1801.98&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# low      1775.01&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取DataFrame对象的一些统计描述&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print( df.describe() )     &lt;span class=&#34;comment&#34;&gt;# 获取返回数据的大致描述&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#               open         high        close          low&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# count     9.000000     9.000000     9.000000     9.000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# mean   1751.267778  1766.864444  1746.853333  1724.421111&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# std      48.213887    42.352767    43.539719    42.882137&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# min    1688.000000  1711.000000  1688.000000  1677.070000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 25%    1703.740000  1736.000000  1711.400000  1688.000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 50%    1760.000000  1776.990000  1733.000000  1703.970000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 75%    1792.000000  1802.000000  1793.000000  1770.000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# max    1825.000000  1828.000000  1801.980000  1779.700000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# .add_yaxis(&amp;quot;kline&amp;quot;,data3) K线需要的数据格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data3 = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     [&lt;span class=&#34;number&#34;&gt;2332.08&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2273.4&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2259.25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2333.54&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     [&lt;span class=&#34;number&#34;&gt;2274.81&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2326.31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2270.1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2328.14&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     [&lt;span class=&#34;number&#34;&gt;2333.61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2347.18&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2321.6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2351.44&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     [&lt;span class=&#34;number&#34;&gt;2340.44&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2324.29&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2304.27&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2352.02&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     [&lt;span class=&#34;number&#34;&gt;2326.42&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2318.61&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2314.59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2333.67&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     [&lt;span class=&#34;number&#34;&gt;2314.68&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2310.59&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2296.58&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2320.96&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     [&lt;span class=&#34;number&#34;&gt;2309.16&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2286.6&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2264.83&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2333.29&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     [&lt;span class=&#34;number&#34;&gt;2282.17&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2263.97&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2253.25&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2286.33&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     [&lt;span class=&#34;number&#34;&gt;2255.77&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2270.28&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2253.31&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2276.22&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 绘制K线图所需要的数据-----横轴的date以及纵轴的open,high,low,close四个参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 难点：如何将DataFrame格式的表格数据转换成以列表为对象元素的列表 [ [],[],[],[],[] ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kline=(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     Kline()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         .add_xaxis(date)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         .add_yaxis(&lt;span class=&#34;string&#34;&gt;&amp;quot;kline&amp;quot;&lt;/span&gt;,dfList)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         .set_global_opts(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             yaxis_opts=opts.AxisOpts(is_scale=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             xaxis_opts=opts.AxisOpts(is_scale=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             title_opts=opts.TitleOpts(title=&lt;span class=&#34;string&#34;&gt;&amp;quot;茅台近日-日K线&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kline.render()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 把json格式的数据，转换成单个key-value的形式，并且把每个dict存入list中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# def parse(self,df):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     for key,value in df.items():&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         if isinstance(value,dict):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#             self.parse(value)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         elif isinstance(value,list):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#             for k in range(len(value)):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#                 self.parse(value[k])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         else:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#             self.L.append(&amp;#123;key:value&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     return self.L&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果为：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;%E8%AE%A4%E8%AF%86Pandas-DataFrame.assets/image-20200914192636539.png&#34; alt=&#34;image-20200914192636539&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2020/09/12/Docker%E5%85%A5%E9%97%A8/</guid>
            <title>Docker入门</title>
            <link>http://example.com/2020/09/12/Docker%E5%85%A5%E9%97%A8/</link>
            <category>Docker</category>
            <pubDate>Sat, 12 Sep 2020 15:59:46 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;docker入门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker入门&#34;&gt;#&lt;/a&gt; Docker 入门&lt;/h1&gt;
&lt;h2 id=&#34;docker简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker简介&#34;&gt;#&lt;/a&gt; docker 简介&lt;/h2&gt;
&lt;h3 id=&#34;三要素&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三要素&#34;&gt;#&lt;/a&gt; 三要素：&lt;/h3&gt;
&lt;p&gt;仓库，镜像，容器&lt;/p&gt;
&lt;h3 id=&#34;why&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#why&#34;&gt;#&lt;/a&gt; why：&lt;/h3&gt;
&lt;p&gt;开发代码 ----&amp;gt; 运维工程师不一定能运行&lt;/p&gt;
&lt;p&gt;环境 / 配置不同 -&amp;gt; 导致相同代码不一定能成功运行得到正确结果&lt;/p&gt;
&lt;h3 id=&#34;简化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#简化&#34;&gt;#&lt;/a&gt; 简化：&lt;/h3&gt;
&lt;p&gt;将代码 / 依赖 / 配置 / 环境等一系列进行打包形成一个统一的镜像&lt;/p&gt;
&lt;p&gt;这个统一的镜像可以在较为简单的环境下成功运行&lt;/p&gt;
&lt;h3 id=&#34;比喻&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#比喻&#34;&gt;#&lt;/a&gt; 比喻：&lt;/h3&gt;
&lt;p&gt;一个集装箱代表一个运行环境，相互分离，互不干扰&lt;/p&gt;
&lt;h2 id=&#34;虚拟机与docker的概念和区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚拟机与docker的概念和区别&#34;&gt;#&lt;/a&gt; 虚拟机与 docker 的概念和区别&lt;/h2&gt;
&lt;h3 id=&#34;虚拟机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚拟机&#34;&gt;#&lt;/a&gt; 虚拟机：&lt;/h3&gt;
&lt;p&gt;在一种操作系统里运行另一种操作系统，跟真实系统一模一样&lt;/p&gt;
&lt;h3 id=&#34;区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#区别&#34;&gt;#&lt;/a&gt; 区别：&lt;/h3&gt;
&lt;p&gt;虚拟机运行分钟级，而 docker 则是秒级&lt;/p&gt;
&lt;p&gt;虚拟里占用资源多，包含了硬件，软件一整套操作系统&lt;/p&gt;
&lt;p&gt;docker 轻量级的，且基于宿主机的内核&lt;/p&gt;
&lt;p&gt;Linux 容器不是模拟一个完整的操作系统，按需导入&lt;/p&gt;
&lt;p&gt;docker 可以认为是一种精简版的 linux 环境，更简洁，灵活&lt;/p&gt;
&lt;h2 id=&#34;资源&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#资源&#34;&gt;#&lt;/a&gt; 资源&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RvY2tlci1jbi5jb20=&#34;&gt;docker-cn.com&lt;/span&gt;    //docker 中文网&lt;br&gt;
 Docker Hub        //docker 仓库&lt;/p&gt;
&lt;h2 id=&#34;docker安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker安装&#34;&gt;#&lt;/a&gt; Docker 安装&lt;/h2&gt;
&lt;p&gt;centos 6.5 或更高的版本&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;uname -r        cat  /etc/redhat-release    // 查看 centos 版本&lt;br&gt;
 epel-release    //epel 安装 docker 依赖库   tag：6.8&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RvY2tlci5pbw==&#34;&gt;docker.io&lt;/span&gt;         // 正式的 docker 镜像      tag：6.8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;7.0 版本不同，具体参考官方文档&lt;/p&gt;
&lt;h2 id=&#34;三部分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三部分&#34;&gt;#&lt;/a&gt; 三部分&lt;/h2&gt;
&lt;p&gt;client--------&amp;gt;docker bulid / pull / run&lt;br&gt;
docker_host---------&amp;gt;Docker  daemon&lt;br&gt;
repository-------------&amp;gt; 仓库&lt;/p&gt;
&lt;h3 id=&#34;理解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#理解&#34;&gt;#&lt;/a&gt; 理解：&lt;/h3&gt;
&lt;p&gt;镜像 ------ 是只读模板&lt;br&gt;
容器 ------ 时利用镜像创造的实例，可以看作简易版的 linux&lt;br&gt;
 仓库 ------ 集中存放镜像文件   分为公开库 / 私有库&lt;/p&gt;
&lt;h2 id=&#34;阿里云网易云镜像加速&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#阿里云网易云镜像加速&#34;&gt;#&lt;/a&gt; 阿里云 / 网易云镜像加速：&lt;/h2&gt;
&lt;p&gt;注册账号&lt;br&gt;
获得阿里云加速器链接&lt;br&gt;
配置文件&lt;br&gt;
重载配置文件 / 重启 docker&lt;br&gt;
 检查是否生效  ps -ef | grep docker&lt;/p&gt;
&lt;h3 id=&#34;docker-run-查找顺序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker-run-查找顺序&#34;&gt;#&lt;/a&gt; docker run 查找顺序&lt;/h3&gt;
&lt;p&gt;本地容器 ------&amp;gt; 本地镜像 --------&amp;gt;hub 共有仓库去 pull 镜像 -----&amp;gt; 本地更具镜像实例一个容器&lt;/p&gt;
&lt;h2 id=&#34;docker命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker命令&#34;&gt;#&lt;/a&gt; docker 命令&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;systemctl  start  docker     // 启动 docker&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;docker images                  // 本地镜像模板&lt;/p&gt;
&lt;p&gt;-a  所有镜像     -q 所有镜像 id     --digests  摘要&lt;/p&gt;
&lt;p&gt;–no-trunc 完整镜像信息     // 参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;docker search &amp;lt;images_name&amp;gt;   // 在 docker hub 共有仓库中搜寻镜像&lt;/p&gt;
&lt;p&gt;-s    星数限定      --no-trunc 完整镜像信息    --automated  只显示该类型镜像&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;docker  pull  &amp;lt;images_name&amp;gt;：tag   // 拉去某个特定版本镜像&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;docker rmi  &amp;lt;images_name&amp;gt;  // 运行时删除不了&lt;/p&gt;
&lt;p&gt;-f   强制删除&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;docker rmi -f  images1:tag  images2:tag  // 删除多个镜像&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;docker rmi -f  $(docker images -qa)    // 删除全部镜像&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20200410102315483.png&#34; alt=&#34;image-20200410102315483&#34; style=&#34;zoom:150%;&#34; /&gt;
&lt;h3 id=&#34;docker-ps-的参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker-ps-的参数&#34;&gt;#&lt;/a&gt; docker ps 的参数：&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;docker ps -a 可查看后台运行的容器 id，并根据需求删除&lt;/p&gt;
&lt;p&gt;docker inspect 容器 id     // 查看容器内部的细节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;镜像原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#镜像原理&#34;&gt;#&lt;/a&gt; 镜像原理：&lt;/h2&gt;
&lt;p&gt;轻量的，可执行的独立软件包，用来打包软件和软件所需的运行环境&lt;/p&gt;
&lt;p&gt;docker 镜像实际上是一层层文件系统，这种为 UnionFile 层级文件系统&lt;/p&gt;
&lt;p&gt;一个文件的内存大，说明需要的层级文件多，依赖的环境复杂&lt;/p&gt;
&lt;h2 id=&#34;分层结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分层结构&#34;&gt;#&lt;/a&gt; 分层结构：&lt;/h2&gt;
&lt;p&gt;优点 ------ 共享资源&lt;/p&gt;
&lt;p&gt;镜像层可读，容器层可写&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;docker commit     // 提交容器副本成为一个新的镜像&lt;/p&gt;
&lt;p&gt;-m “提交信息”    -a 作者    容器 ID  目标镜像名：tag&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;防火墙&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#防火墙&#34;&gt;#&lt;/a&gt; 防火墙：&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;systemctl status firewalld.service   // 查看防火墙状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;systemctl stop firewalld.service   // 关闭运行的防火墙&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;systemctl disable firewalld.service  // 永久关闭防火墙&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;docker容器数据卷&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker容器数据卷&#34;&gt;#&lt;/a&gt; docker 容器数据卷：&lt;/h2&gt;
&lt;p&gt;保证数据的持久化，容器之间共享数据，数据同步&lt;/p&gt;
&lt;h3 id=&#34;直接命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#直接命令&#34;&gt;#&lt;/a&gt; 直接命令：&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;docker run -it -v /myDataVolume:/dataVolumeContainer centos&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;:ro   // 修改权限为只读模式&lt;/p&gt;
&lt;p&gt;映射文件夹下无法新建文件，且无法修改文件，形成单方向同步&lt;/p&gt;
&lt;h2 id=&#34;dockerfile&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dockerfile&#34;&gt;#&lt;/a&gt; DockerFile：&lt;/h2&gt;
&lt;p&gt;对镜像源码的描述，编译文件&lt;/p&gt;
&lt;p&gt;提示错误：“docker build” requires exactly 1 argument.&lt;/p&gt;
&lt;p&gt;原因是因为（少了一个 ‘.’ ， ‘.’ 代表当前路径）&lt;/p&gt;
&lt;p&gt;[root@docker mydocker]# docker build -f /mydocker/DockerFile -t cs/centos .&lt;/p&gt;
&lt;p&gt;. 打包当前目录&lt;/p&gt;
&lt;h3 id=&#34;数据卷容器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据卷容器&#34;&gt;#&lt;/a&gt; 数据卷容器：&lt;/h3&gt;
&lt;p&gt;容器间传递共享&lt;/p&gt;
&lt;p&gt;docker run -it --name dc01 cs/centos  // 父容器&lt;/p&gt;
&lt;p&gt;docker run -it --name dc02 --volumes-from dc01 cs/centos   // 子容器&lt;/p&gt;
&lt;p&gt;删除父容器 1，对 2，3 子容器不影响，干掉父容器 1，对 2，3 之间的数据共享也不影响&lt;/p&gt;
&lt;h3 id=&#34;dockerfile-镜像构建文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dockerfile-镜像构建文件&#34;&gt;#&lt;/a&gt; DockerFile:  镜像构建文件&lt;/h3&gt;
&lt;p&gt;手动编写符合 file 规范的 dockerfile 文件&lt;/p&gt;
&lt;p&gt;docker build 命令执行，生成镜像&lt;/p&gt;
&lt;p&gt;docker run 执行&lt;/p&gt;
&lt;h3 id=&#34;dockerfile-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dockerfile-2&#34;&gt;#&lt;/a&gt; dockerfile：&lt;/h3&gt;
&lt;p&gt;1，每条保留字指令都必须大写首字母，且保留字后不为空&lt;/p&gt;
&lt;p&gt;2，指令自上而下，顺序执行，# 表注释&lt;/p&gt;
&lt;p&gt;3，每条指令创建一个新的镜像层，并不断提交给镜像&lt;/p&gt;
&lt;h3 id=&#34;docker执行dockerfile的大致流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker执行dockerfile的大致流程&#34;&gt;#&lt;/a&gt; docker 执行 dockerfile 的大致流程：&lt;/h3&gt;
&lt;p&gt;1，docker 从基础镜像运行一个容器&lt;/p&gt;
&lt;p&gt;2，执行一条条指令，对容器进行修改&lt;/p&gt;
&lt;p&gt;3，执行 docker commit 提交新的镜像层，对镜像进行修改&lt;/p&gt;
&lt;p&gt;4，docker 基于新镜像在运行一个容器&lt;/p&gt;
&lt;p&gt;5，在依次类推，直到运行完所有指令&lt;/p&gt;
&lt;h3 id=&#34;dockerfile保留字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dockerfile保留字&#34;&gt;#&lt;/a&gt; dockerfile 保留字：&lt;/h3&gt;
&lt;p&gt;基础镜像&lt;/p&gt;
&lt;p&gt;作者说明&lt;/p&gt;
&lt;p&gt;执行命令&lt;/p&gt;
&lt;p&gt;指定对外暴露的端口&lt;/p&gt;
&lt;p&gt;进入终端的指定工作目录&lt;/p&gt;
&lt;p&gt;构建镜像中设置环境变量&lt;/p&gt;
&lt;p&gt;拷贝并解压缩某个压缩包&lt;/p&gt;
&lt;p&gt;与 add 功能相同，但不能解压缩&lt;/p&gt;
&lt;p&gt;自建容器卷&lt;/p&gt;
&lt;p&gt;指定容器启动时要运行的命令，只有最后一个 CMD 命令生效&lt;/p&gt;
&lt;p&gt;指定容器启动时要运行的命令，但不会覆盖之前的命令&lt;/p&gt;
&lt;p&gt;触发器&lt;/p&gt;
&lt;h2 id=&#34;cmd和entrypoint区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cmd和entrypoint区别&#34;&gt;#&lt;/a&gt; CMD 和 ENTRYPOINT 区别：&lt;/h2&gt;
&lt;p&gt;CMD  run 命令后加参数覆盖之前的命令&lt;/p&gt;
&lt;p&gt;ENTRYPOINT  run 命令后的参数添加到命令里&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
