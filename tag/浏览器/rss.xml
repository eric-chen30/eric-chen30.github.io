<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>CsStar • Posts by &#34;浏览器&#34; tag</title>
        <link>http://csstar.top</link>
        <description>Work Hard To Be A Better Man</description>
        <language>zh-CN</language>
        <pubDate>Mon, 14 Mar 2022 19:51:06 +0800</pubDate>
        <lastBuildDate>Mon, 14 Mar 2022 19:51:06 +0800</lastBuildDate>
        <category>Docker</category>
        <category>Pandas</category>
        <category>ES7-11</category>
        <category>快捷操作</category>
        <category>前端学习网站</category>
        <category>前端知识</category>
        <category>计算机网络</category>
        <category>DOM</category>
        <category>计算机组成原理</category>
        <category>设计模式</category>
        <category>浏览器</category>
        <category>ES6</category>
        <item>
            <guid isPermalink="true">http://csstar.top/2022/03/14/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</guid>
            <title>跨域问题</title>
            <link>http://csstar.top/2022/03/14/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</link>
            <category>浏览器</category>
            <pubDate>Mon, 14 Mar 2022 19:51:06 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;跨域问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跨域问题&#34;&gt;#&lt;/a&gt; 跨域问题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;浏览器处于安全考虑，有同源策略。同源意味着 协议、域名、端口必须一致，否则就不同源，如果不同源，Ajax 请求数据就会失败。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;jsonp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jsonp&#34;&gt;#&lt;/a&gt; JSONP&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;通过 script 标签指向需要请求数据的地址并提供一个回调函数接收数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script src=&lt;span class=&#34;string&#34;&gt;&amp;quot;http://domain/api?param1=a&amp;amp;param2=b&amp;amp;callback=jsonp&amp;quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;jsonp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;data&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面这种用法会有一个问题，当需要多次使用 jsonp 接收数据时，就会有函数同名的问题。因此，我们需要封装一个 jsonp 函数&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 封住的 jsonp（url，jsonpCallback，sucess）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;jsonp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;url,jsonpCallback,sucess&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 构建script元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; script = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.createElement(&lt;span class=&#34;string&#34;&gt;&amp;#x27;script&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 设置script元素的属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    script.src = url;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    script.async = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    scriipt.type = &lt;span class=&#34;string&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 回调函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;window&lt;/span&gt;[jsonpCallback] = functuin(data)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sucess &amp;amp;&amp;amp; sucess(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.body.appendChild(script);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jsonp(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;http://xxx&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;callback&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    functuin(value)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;jsonp 只能支持 get 请求，是很局限的，但是与下面所讲地 CORS 相比，优点在于可以兼容老式浏览器&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;cors跨域资源共享&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cors跨域资源共享&#34;&gt;#&lt;/a&gt; CORS— 跨域资源共享&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;允许浏览器向跨源的服务器发送 &lt;code&gt;XMLHttpRequest&lt;/code&gt;  请求，克服 Ajax 只能同源使用的限制。实现 CORS 的关键是服务器，只要服务器实现了 CORS 接口，就可以实现跨源通信&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;简单请求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#简单请求&#34;&gt;#&lt;/a&gt; 简单请求&lt;/h3&gt;
&lt;p&gt;对于简单请求，浏览器直接发送 CORS 请求，具体就是在头信息之中添加一个 &lt;code&gt;origin&lt;/code&gt;  字段，该字段说明来自于哪个源（协议、域名、端口）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果该源不在许可范围内，服务器返回一个正常的 HTTP 响应，浏览器发现响应头中没有 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;  字段，就知道请求失败，抛出错误被 &lt;code&gt;XMLHttpRequest&lt;/code&gt;  对象的 &lt;code&gt;onerror&lt;/code&gt;  回调函数捕获。&lt;/li&gt;
&lt;li&gt;如果该源在许可范围内，服务器会返回响应，并在响应头中添加一些字段信息：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Access-Control-Allow-Origin&lt;/span&gt;: http://api.bob.com			// 请求值要么是请求源，要么可以设置为 * ，接收任何域名的请求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Access-Control-Allow-Credentials&lt;/span&gt;: true					// 是否允许发送cookie，默认cookie不包含在发送请求中，如果需要包含cookie，将该字段设置为true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Access-Control-Expose-Headers&lt;/span&gt;: FooBar					// 想要拿到其它字段，需要指明&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Content-Type&lt;/span&gt;: text/html; charset=utf-8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;CORS 请求时， &lt;code&gt;XMLHttpRequest&lt;/code&gt;  对象的 &lt;code&gt;getResponseHeader()&lt;/code&gt;  方法只能拿到 6 个基本字段： &lt;code&gt;Cache-Control&lt;/code&gt; 、 &lt;code&gt;Content-Language&lt;/code&gt; 、 &lt;code&gt;Content-Type&lt;/code&gt; 、 &lt;code&gt;Expires&lt;/code&gt; 、 &lt;code&gt;Last-Modified&lt;/code&gt; 、 &lt;code&gt;Pragma&lt;/code&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;withCredentials&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果要把 cookie 发送到服务器，不仅仅需要把 &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;  设置为 true，开发者在 Ajax 请求中还必须打开 &lt;code&gt;withCredentials&lt;/code&gt;  属性，通过 &lt;code&gt;xhr.withCredentials = true;&lt;/code&gt;  打开。&lt;/p&gt;
&lt;p&gt;否则，即使浏览器同意请求可携带 cookie，浏览器也不会发送。而有时，省略了 &lt;code&gt;withCredentials&lt;/code&gt;  属性，浏览器还是会发送 cookie，这时候如果不需要发送 cookie，就设置 &lt;code&gt;xhr.withCredentials:false;&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;并且如果需要携带 cookie，那么 &lt;code&gt;Acess-Control-Allow-Origin&lt;/code&gt;  属性就不能设置为 *，必须指定明确的源。&lt;/p&gt;
&lt;h3 id=&#34;非简单请求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#非简单请求&#34;&gt;#&lt;/a&gt; 非简单请求&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;包含特殊请求，比如请求方式为 &lt;code&gt;put&lt;/code&gt;  或者 &lt;code&gt;delete&lt;/code&gt; ，或者 &lt;code&gt;Content-Type&lt;/code&gt;  字段的类型为 &lt;code&gt;application/json&lt;/code&gt; ，非简单的 CORS 请求在正式通信之前会进行 “预检”，通过返回的响应头信息进行判断。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;OPTIONS /cors HTTP/1.1								// 预检请求用的请求方法，用来询问&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Origin&lt;/span&gt;: http://api.bob.com							// 表示源&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Access-Control-Request-Method&lt;/span&gt;: PUT					// 列出浏览器的CORS请求会用到哪些HTTP方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Access-Control-Request-Headers&lt;/span&gt;: X-Custom-Header		// CORS请求额外发送的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Host&lt;/span&gt;: api.alice.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Accept-Language&lt;/span&gt;: en-US&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Connection&lt;/span&gt;: keep-alive&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;User-Agent&lt;/span&gt;: Mozilla/5.0...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;预检请求的回应：检查了 &lt;code&gt;Origin&lt;/code&gt; 、 &lt;code&gt;Access-Control-Request-Method&lt;/code&gt;  和 &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt;  字段以后，确认允许跨源请求，就可以做出回应&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;HTTP/1.1 &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt; OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Date&lt;/span&gt;: Mon, 01 Dec 2008 01:15:39 GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Server&lt;/span&gt;: Apache/2.0.61 (Unix)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Access-Control-Allow-Origin&lt;/span&gt;: http://api.bob.com			// 表示该源可以进行数据请求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Access-Control-Allow-Methods&lt;/span&gt;: GET, POST, PUT			// 支持跨域请求的方法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Access-Control-Allow-Headers&lt;/span&gt;: X-Custom-Header			// 服务器支持的浏览器头信息字段&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Content-Type&lt;/span&gt;: text/html; charset=utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Content-Encoding&lt;/span&gt;: gzip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Content-Length&lt;/span&gt;: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Keep-Alive&lt;/span&gt;: timeout=2, max=100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Connection&lt;/span&gt;: Keep-Alive&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Content-Type&lt;/span&gt;: text/plain&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;浏览器正常请求&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;PUT&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/cors&lt;/span&gt; HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Origin&lt;/span&gt;: http://api.bob.com			// 浏览器自动添加的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Host&lt;/span&gt;: api.alice.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;X-Custom-Header&lt;/span&gt;: value&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Accept-Language&lt;/span&gt;: en-US&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Connection&lt;/span&gt;: keep-alive&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;User-Agent&lt;/span&gt;: Mozilla/5.0...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;正常回应&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Access-Control-Allow-Origin&lt;/span&gt;: http://api.bob.com		// 必须包含的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attribute&#34;&gt;Content-Type&lt;/span&gt;: text/html; charset=utf-8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
    </channel>
</rss>
